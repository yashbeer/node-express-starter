/**
 * User test fixtures for use with Knex/SQLite.
 *
 * Usage:
 * const { userOne, userTwo, admin, insertUsers } = require('../fixtures/user.fixture');
 *
 * // To insert users:
 * const users = await insertUsers([userOne, userTwo]);
 * const userOneId = users[0].id;
 *
 * Note: IDs are auto-generated by SQLite.
 * You should get the actual IDs after insertion from the returned objects.
 */

const bcrypt = require('bcryptjs');
const faker = require('faker');
const User = require('../../src/models/user.model');

const password = 'password1';
const salt = bcrypt.genSaltSync(8);
const hashedPassword = bcrypt.hashSync(password, salt);

const userOne = {
  name: faker.name.findName(),
  email: faker.internet.email().toLowerCase(),
  password,
  role: 'user',
  isEmailVerified: false,
};

const userTwo = {
  name: faker.name.findName(),
  email: faker.internet.email().toLowerCase(),
  password,
  role: 'user',
  isEmailVerified: false,
};

const admin = {
  name: faker.name.findName(),
  email: faker.internet.email().toLowerCase(),
  password,
  role: 'admin',
  isEmailVerified: false,
};

const insertUsers = async (users) => {
  const createdUsers = await Promise.all(users.map((user) => User.create({ ...user, password: hashedPassword })));
  return createdUsers;
};

module.exports = {
  userOne,
  userTwo,
  admin,
  insertUsers,
};
